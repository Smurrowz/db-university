
1. Selezionare tutti gli studenti nati nel 1990 (160)
SELECT * 
FROM `students`
 WHERE YEAR(`date_of_birth`) = 1990;

2. Selezionare tutti i corsi che valgono più di 10 crediti (479)
SELECT *
 FROM `courses` 
WHERE `cfu` > 10;

3. Selezionare tutti gli studenti che hanno più di 30 anni
SELECT * 
FROM `students` 
WHERE TIMESTAMPDIFF(YEAR,`date_of_birth`, CURDATE()) > 30;

4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di
laurea (286)
SELECT *
 FROM `courses`
 WHERE `period` = 'I semestre' AND `year` = 1;

5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del
20/06/2020 (21)
SELECT *
 FROM `exams` 
WHERE `date` = '2020-06-20' AND `hour` > '14:00:00';

6. Selezionare tutti i corsi di laurea magistrale (38)
SELECT * 
FROM `degrees` 
WHERE `level` = 'magistrale';

7. Da quanti dipartimenti è composta l'università? (12)
SELECT COUNT(*)
 FROM `departments`;

8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)
SELECT COUNT(*)
 FROM `teachers` 
WHERE `phone` IS NULL;



1) Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia 

SELECT students.name, students.surname, degrees.name 
FROM students 
JOIN degrees
ON students.degree_id = degrees.id 
WHERE degrees.name = 'Corso di laurea in Economia';

2) Selezionare tutti i Corsi di Laurea del Dipartimento di Neuroscienze (7)
SELECT *
FROM `degrees` 
JOIN departments 
ON degrees.department_id = departments.id 
WHERE departments.name = 'dipartimento di Neuroscienze' AND degrees.level = 'magistrale';

3) Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
SELECT courses.*, teachers.name, teachers.surname 
FROM `teachers` 
JOIN course_teacher 
ON teachers.id = course_teacher.teacher_id 
JOIN courses 
ON courses.id = course_teacher.course_id 
WHERE teachers.id = 44;

4) Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome

SELECT students.name AS "nome_studente" ,students.surname AS "_Cognome_studente",students.registration_number,departments.name AS "nome_dipartimento", degrees.name, degrees.level
FROM students
join degrees
on students.degree_id=degrees.id 
join departments
ON departments.id=degrees.department_id
order by students.surname, students.name;

5) Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
SELECT degrees.name AS `nome_corso_laurea`, degrees.level, courses.period, courses.year, teachers.name, teachers.surname
FROM `degrees`
JOIN courses
ON degrees.id = courses.degree_id
JOIN course_teacher
ON course_teacher.course_id = courses.id
JOIN teachers
ON teachers.id = course_teacher.teacher_id
order by degrees.name, degrees.level, courses.period, courses.year;

6) Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)

SELECT DISTINCT teachers.name, teachers.surname, departments.name as `dep_name`
FROM teachers
JOIN course_teacher
ON teachers.id = course_teacher.teacher_id
JOIN courses
ON courses.id = course_teacher.course_id
JOIN degrees
ON degrees.id = courses.degree_id
JOIN departments
ON departments.id = degrees.department_id
WHERE departments.name = 'dipartimento di matematica'
order by teachers.surname, teachers.name;

1. Contare quanti iscritti ci sono stati ogni anno

SELECT count(*) AS `numero_studenti` , YEAR(enrolment_date) as `anno`
FROM `students`
GROUP by year(enrolment_date);

2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio

SELECT COUNT(*) as `prof_per_edificio`, teachers.office_address as `edificio`
FROM `teachers`
GROUP BY office_address;

3. Calcolare la media dei voti di ogni appello d'esame

SELECT AVG(vote) as `voto_medio`, exam_id, courses.name
FROM `exam_student`
JOIN exams
ON exams.id = exam_student.exam_id
JOIN courses
ON courses.id = exams.course_id
GROUP by exam_id;

4. Contare quanti corsi di laurea ci sono per ogni dipartimento

SELECT COUNT(departments.id) as `n_corsi_di_laurea`, departments.name
FROM `departments`
JOIN degrees
ON degrees.department_id = departments.id
group by departments.id;











